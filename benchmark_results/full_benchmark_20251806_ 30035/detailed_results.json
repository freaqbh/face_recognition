{
  "benchmark_info": {
    "timestamp": "2025-06-18T04:17:44.031442",
    "total_combinations": 72,
    "system_info": {
      "cpu_count": 12,
      "memory_total_gb": 7.21,
      "python_version": "3.10.9 (tags/v3.10.9:1dd9be6, Dec  6 2022, 20:01:21) [MSC v.1934 64 bit (AMD64)]",
      "timestamp": "2025-06-18T03:01:00.734740"
    }
  },
  "results": [
    {
      "detector": "opencv",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        76.3662679195404,
        2.880826950073242,
        0.710543155670166,
        0.6872456073760986,
        0.48909807205200195,
        2.709805727005005,
        1.635408639907837,
        0.45018672943115234
      ],
      "memory_usage": [
        -61.59375,
        -145.94140625,
        172.015625,
        80.51171875,
        27.7578125,
        -375.30859375,
        -73.0625,
        -7.92578125
      ],
      "accuracy": 0.625,
      "precision": 0.625,
      "recall": 1.0,
      "f1_score": 0.7692307692307693,
      "true_positives": 5,
      "true_negatives": 0,
      "false_positives": 3,
      "false_negatives": 0,
      "avg_processing_time": 10.741172850131989,
      "std_processing_time": 24.82075834336543,
      "min_processing_time": 0.45018672943115234,
      "max_processing_time": 76.3662679195404,
      "avg_memory_usage_mb": -47.943359375,
      "max_memory_usage_mb": 172.015625
    },
    {
      "detector": "opencv",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        true,
        true,
        false,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        4.81423282623291,
        1.5201430320739746,
        0.4896829128265381,
        0.5124104022979736,
        0.42992305755615234,
        1.455709457397461,
        1.376499891281128,
        0.44068002700805664
      ],
      "memory_usage": [
        -122.703125,
        -81.625,
        36.9375,
        96.1171875,
        25.1171875,
        -169.2734375,
        -20.59375,
        19.3125
      ],
      "accuracy": 0.5,
      "precision": 0.6,
      "recall": 0.6,
      "f1_score": 0.6,
      "true_positives": 3,
      "true_negatives": 1,
      "false_positives": 2,
      "false_negatives": 2,
      "avg_processing_time": 1.3799102008342743,
      "std_processing_time": 1.376121529715978,
      "min_processing_time": 0.42992305755615234,
      "max_processing_time": 4.81423282623291,
      "avg_memory_usage_mb": -27.0888671875,
      "max_memory_usage_mb": 96.1171875
    },
    {
      "detector": "opencv",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        3.7606451511383057,
        1.3510470390319824,
        0.4282815456390381,
        0.43532609939575195,
        0.39989566802978516,
        1.3585872650146484,
        1.4458270072937012,
        0.467559814453125
      ],
      "memory_usage": [
        -173.88671875,
        112.328125,
        12.0234375,
        8.96484375,
        13.84765625,
        -14.11328125,
        121.4375,
        21.7265625
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.2,
      "f1_score": 0.33333333333333337,
      "true_positives": 1,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 4,
      "avg_processing_time": 1.2058961987495422,
      "std_processing_time": 1.0619517779434908,
      "min_processing_time": 0.39989566802978516,
      "max_processing_time": 3.7606451511383057,
      "avg_memory_usage_mb": 12.791015625,
      "max_memory_usage_mb": 121.4375
    },
    {
      "detector": "opencv",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        4.456559896469116,
        5.088375091552734,
        0.219740629196167,
        0.21022868156433105,
        0.1714169979095459,
        1.2019238471984863,
        1.1145360469818115,
        0.1825094223022461
      ],
      "memory_usage": [
        257.9375,
        -657.58203125,
        -250.98046875,
        -111.83984375,
        -69.19140625,
        -632.73046875,
        37.19140625,
        13.28515625
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.2,
      "f1_score": 0.33333333333333337,
      "true_positives": 1,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 4,
      "avg_processing_time": 1.5806613266468048,
      "std_processing_time": 1.8909836197154082,
      "min_processing_time": 0.1714169979095459,
      "max_processing_time": 5.088375091552734,
      "avg_memory_usage_mb": -176.73876953125,
      "max_memory_usage_mb": 257.9375
    },
    {
      "detector": "opencv",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "opencv",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        4.591381788253784,
        1.0769565105438232,
        0.10082674026489258,
        0.10206460952758789,
        0.04925417900085449,
        1.0840508937835693,
        1.0193383693695068,
        0.06000661849975586
      ],
      "memory_usage": [
        629.859375,
        -66.7421875,
        15.17578125,
        13.91015625,
        7.6796875,
        78.10546875,
        21.8515625,
        -3.8515625
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.2,
      "f1_score": 0.33333333333333337,
      "true_positives": 1,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 4,
      "avg_processing_time": 1.0104849636554718,
      "std_processing_time": 1.4279710340631024,
      "min_processing_time": 0.04925417900085449,
      "max_processing_time": 4.591381788253784,
      "avg_memory_usage_mb": 86.99853515625,
      "max_memory_usage_mb": 629.859375
    },
    {
      "detector": "opencv",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        17.98972797393799,
        1.329390525817871,
        0.3761613368988037,
        0.3597540855407715,
        0.3137507438659668,
        1.3037943840026855,
        1.2863962650299072,
        0.3254532814025879
      ],
      "memory_usage": [
        593.34375,
        27.52734375,
        -10.265625,
        -9.18359375,
        -9.75390625,
        -114.796875,
        -131.078125,
        22.53515625
      ],
      "accuracy": 0.625,
      "precision": 0.625,
      "recall": 1.0,
      "f1_score": 0.7692307692307693,
      "true_positives": 5,
      "true_negatives": 0,
      "false_positives": 3,
      "false_negatives": 0,
      "avg_processing_time": 2.9105535745620728,
      "std_processing_time": 5.716828116739928,
      "min_processing_time": 0.3137507438659668,
      "max_processing_time": 17.98972797393799,
      "avg_memory_usage_mb": 46.041015625,
      "max_memory_usage_mb": 593.34375
    },
    {
      "detector": "opencv",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        4.040216445922852,
        1.7554683685302734,
        0.8369615077972412,
        0.8407602310180664,
        0.795325517654419,
        1.7181084156036377,
        1.7325432300567627,
        0.8238937854766846
      ],
      "memory_usage": [
        45.82421875,
        -48.71484375,
        2.0234375,
        13.7890625,
        0.87109375,
        14.95703125,
        -96.8203125,
        6.11328125
      ],
      "accuracy": 0.625,
      "precision": 0.6666666666666666,
      "recall": 0.8,
      "f1_score": 0.7272727272727272,
      "true_positives": 4,
      "true_negatives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "avg_processing_time": 1.567909687757492,
      "std_processing_time": 1.025342647805123,
      "min_processing_time": 0.795325517654419,
      "max_processing_time": 4.040216445922852,
      "avg_memory_usage_mb": -7.74462890625,
      "max_memory_usage_mb": 45.82421875
    },
    {
      "detector": "opencv",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        8.578755617141724,
        1.000929832458496,
        0.10188031196594238,
        0.09557080268859863,
        0.05243515968322754,
        1.0242195129394531,
        0.9844083786010742,
        0.06592035293579102
      ],
      "memory_usage": [
        140.703125,
        -316.515625,
        13.41796875,
        21.01953125,
        -7.3046875,
        34.18359375,
        128.75,
        11.8359375
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 1.4880149960517883,
      "std_processing_time": 2.714039729399861,
      "min_processing_time": 0.05243515968322754,
      "max_processing_time": 8.578755617141724,
      "avg_memory_usage_mb": 3.26123046875,
      "max_memory_usage_mb": 140.703125
    },
    {
      "detector": "ssd",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        1.949784755706787,
        0.8536109924316406,
        0.7057554721832275,
        0.681551456451416,
        0.6208620071411133,
        0.8942344188690186,
        0.8960154056549072,
        0.5058834552764893
      ],
      "memory_usage": [
        884.609375,
        -47.35546875,
        -10.265625,
        22.41015625,
        2.37890625,
        -54.984375,
        123.6796875,
        30.75
      ],
      "accuracy": 0.75,
      "precision": 1.0,
      "recall": 0.6,
      "f1_score": 0.7499999999999999,
      "true_positives": 3,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 0.888462245464325,
      "std_processing_time": 0.4215863948624514,
      "min_processing_time": 0.5058834552764893,
      "max_processing_time": 1.949784755706787,
      "avg_memory_usage_mb": 118.90283203125,
      "max_memory_usage_mb": 884.609375
    },
    {
      "detector": "ssd",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        2.300910711288452,
        0.860175371170044,
        0.6733291149139404,
        0.6832342147827148,
        0.5399172306060791,
        0.7697749137878418,
        0.7729923725128174,
        0.446514368057251
      ],
      "memory_usage": [
        -398.39453125,
        48.42578125,
        -28.671875,
        -171.7890625,
        3.47265625,
        21.34375,
        -3.59375,
        19.96484375
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 0.8808560371398926,
      "std_processing_time": 0.5509049733223744,
      "min_processing_time": 0.446514368057251,
      "max_processing_time": 2.300910711288452,
      "avg_memory_usage_mb": -63.6552734375,
      "max_memory_usage_mb": 48.42578125
    },
    {
      "detector": "ssd",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        1.3503375053405762,
        0.8851425647735596,
        0.6883821487426758,
        0.6311547756195068,
        0.5311546325683594,
        0.7751526832580566,
        0.769956111907959,
        0.45707154273986816
      ],
      "memory_usage": [
        128.875,
        -220.74609375,
        -184.66796875,
        2.67578125,
        -2.3125,
        16.71484375,
        -5.7734375,
        10.26953125
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 0.7610439956188202,
      "std_processing_time": 0.25747453785922386,
      "min_processing_time": 0.45707154273986816,
      "max_processing_time": 1.3503375053405762,
      "avg_memory_usage_mb": -31.87060546875,
      "max_memory_usage_mb": 128.875
    },
    {
      "detector": "ssd",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        0.8494114875793457,
        0.6104221343994141,
        0.45391249656677246,
        0.3970053195953369,
        0.3267364501953125,
        0.5420746803283691,
        0.5912487506866455,
        0.2201671600341797
      ],
      "memory_usage": [
        50.96484375,
        32.4765625,
        85.33984375,
        -3.82421875,
        4.80859375,
        18.34765625,
        3.9140625,
        0.73828125
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 0.498872309923172,
      "std_processing_time": 0.18214915362954984,
      "min_processing_time": 0.2201671600341797,
      "max_processing_time": 0.8494114875793457,
      "avg_memory_usage_mb": 24.095703125,
      "max_memory_usage_mb": 85.33984375
    },
    {
      "detector": "ssd",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "ssd",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        0.6936452388763428,
        0.47103285789489746,
        0.31322312355041504,
        0.278012752532959,
        0.20198297500610352,
        0.4506349563598633,
        0.4538235664367676,
        0.10252571105957031
      ],
      "memory_usage": [
        36.3828125,
        -2.24609375,
        -13.4140625,
        24.83203125,
        20.71875,
        -5.51953125,
        30.546875,
        -0.21875
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 0.37061014771461487,
      "std_processing_time": 0.17318226330412878,
      "min_processing_time": 0.10252571105957031,
      "max_processing_time": 0.6936452388763428,
      "avg_memory_usage_mb": 11.38525390625,
      "max_memory_usage_mb": 36.3828125
    },
    {
      "detector": "ssd",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        1.4724514484405518,
        0.7981984615325928,
        0.6108174324035645,
        0.5781381130218506,
        0.4951174259185791,
        0.8508343696594238,
        0.761568546295166,
        0.34759068489074707
      ],
      "memory_usage": [
        262.16015625,
        -127.37109375,
        -73.90234375,
        24.71875,
        23.6796875,
        -23.07421875,
        7.07421875,
        -5.734375
      ],
      "accuracy": 0.75,
      "precision": 1.0,
      "recall": 0.6,
      "f1_score": 0.7499999999999999,
      "true_positives": 3,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 0.7393395602703094,
      "std_processing_time": 0.31809159596522063,
      "min_processing_time": 0.34759068489074707,
      "max_processing_time": 1.4724514484405518,
      "avg_memory_usage_mb": 10.94384765625,
      "max_memory_usage_mb": 262.16015625
    },
    {
      "detector": "ssd",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        1.4352364540100098,
        1.2001872062683105,
        1.061673641204834,
        1.055924654006958,
        0.9571926593780518,
        1.1914434432983398,
        1.211599349975586,
        0.8745129108428955
      ],
      "memory_usage": [
        -184.015625,
        -71.015625,
        31.546875,
        32.27734375,
        38.41796875,
        5.3125,
        -3.80859375,
        38.34375
      ],
      "accuracy": 0.75,
      "precision": 1.0,
      "recall": 0.6,
      "f1_score": 0.7499999999999999,
      "true_positives": 3,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 1.1234712898731232,
      "std_processing_time": 0.1633554302980078,
      "min_processing_time": 0.8745129108428955,
      "max_processing_time": 1.4352364540100098,
      "avg_memory_usage_mb": -14.11767578125,
      "max_memory_usage_mb": 38.41796875
    },
    {
      "detector": "ssd",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        0.701784610748291,
        0.4958627223968506,
        0.3474857807159424,
        0.29297518730163574,
        0.20577025413513184,
        0.42451977729797363,
        0.46666574478149414,
        0.1116023063659668
      ],
      "memory_usage": [
        72.69921875,
        7.01953125,
        57.98828125,
        -16.39453125,
        -1.35546875,
        -2.75390625,
        6.22265625,
        -0.0703125
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 0.38083329796791077,
      "std_processing_time": 0.17229361992462408,
      "min_processing_time": 0.1116023063659668,
      "max_processing_time": 0.701784610748291,
      "avg_memory_usage_mb": 15.41943359375,
      "max_memory_usage_mb": 72.69921875
    },
    {
      "detector": "dlib",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        95.72699809074402,
        115.93925905227661,
        3.9989981651306152,
        4.193092346191406,
        1.408324956893921,
        129.02060103416443,
        92.1315369606018,
        2.805537462234497
      ],
      "memory_usage": [
        -357.25,
        -174.5859375,
        109.1015625,
        -209.39453125,
        -65.29296875,
        398.77734375,
        -767.046875,
        -51.890625
      ],
      "accuracy": 0.75,
      "precision": 0.8,
      "recall": 0.8,
      "f1_score": 0.8000000000000002,
      "true_positives": 4,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "avg_processing_time": 55.65304350852966,
      "std_processing_time": 53.625371749623135,
      "min_processing_time": 1.408324956893921,
      "max_processing_time": 129.02060103416443,
      "avg_memory_usage_mb": -139.69775390625,
      "max_memory_usage_mb": 398.77734375
    },
    {
      "detector": "dlib",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        true,
        false,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        70.38392686843872,
        63.18451404571533,
        3.9156100749969482,
        4.1051108837127686,
        1.406205177307129,
        64.80028748512268,
        61.24756217002869,
        2.7401154041290283
      ],
      "memory_usage": [
        -1028.82421875,
        153.578125,
        25.046875,
        49.23046875,
        -54.0625,
        -101.22265625,
        -345.09375,
        161.7109375
      ],
      "accuracy": 0.5,
      "precision": 0.6666666666666666,
      "recall": 0.4,
      "f1_score": 0.5,
      "true_positives": 2,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 3,
      "avg_processing_time": 33.97291651368141,
      "std_processing_time": 31.03409060620291,
      "min_processing_time": 1.406205177307129,
      "max_processing_time": 70.38392686843872,
      "avg_memory_usage_mb": -142.45458984375,
      "max_memory_usage_mb": 161.7109375
    },
    {
      "detector": "dlib",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        62.06333827972412,
        63.96764826774597,
        3.904308557510376,
        4.244525671005249,
        1.3720920085906982,
        65.49191284179688,
        74.20116567611694,
        2.909010171890259
      ],
      "memory_usage": [
        602.79296875,
        -65.6796875,
        74.9921875,
        38.83203125,
        -61.62890625,
        -95.3046875,
        -418.41796875,
        119.3515625
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 34.76925018429756,
      "std_processing_time": 31.841639703028154,
      "min_processing_time": 1.3720920085906982,
      "max_processing_time": 74.20116567611694,
      "avg_memory_usage_mb": 24.3671875,
      "max_memory_usage_mb": 602.79296875
    },
    {
      "detector": "dlib",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        64.03266429901123,
        63.32910871505737,
        3.653221845626831,
        3.744966506958008,
        1.1594903469085693,
        72.86856460571289,
        72.27293729782104,
        2.3793630599975586
      ],
      "memory_usage": [
        224.23046875,
        -344.91015625,
        39.0703125,
        26.46484375,
        -67.09765625,
        144.84375,
        93.46484375,
        148.37890625
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 35.43003958463669,
      "std_processing_time": 32.85581803863135,
      "min_processing_time": 1.1594903469085693,
      "max_processing_time": 72.86856460571289,
      "avg_memory_usage_mb": 33.0556640625,
      "max_memory_usage_mb": 224.23046875
    },
    {
      "detector": "dlib",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "dlib",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        70.91241574287415,
        70.02052521705627,
        3.5360488891601562,
        3.580301523208618,
        1.0589125156402588,
        75.62517786026001,
        84.80183935165405,
        2.2547004222869873
      ],
      "memory_usage": [
        -427.7578125,
        -126.125,
        78.44921875,
        248.59375,
        -80.94140625,
        142.140625,
        -141.73046875,
        119.69921875
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 38.97374019026756,
      "std_processing_time": 36.60920635080776,
      "min_processing_time": 1.0589125156402588,
      "max_processing_time": 84.80183935165405,
      "avg_memory_usage_mb": -23.458984375,
      "max_memory_usage_mb": 248.59375
    },
    {
      "detector": "dlib",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        69.99549293518066,
        85.83355021476746,
        4.427024841308594,
        4.211961507797241,
        1.5874841213226318,
        84.91218566894531,
        68.57270383834839,
        2.7549455165863037
      ],
      "memory_usage": [
        698.09765625,
        -327.953125,
        160.05859375,
        -62.57421875,
        -64.84765625,
        122.83984375,
        -180.1171875,
        1.640625
      ],
      "accuracy": 0.75,
      "precision": 0.8,
      "recall": 0.8,
      "f1_score": 0.8000000000000002,
      "true_positives": 4,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "avg_processing_time": 40.286918580532074,
      "std_processing_time": 37.48703924374628,
      "min_processing_time": 1.5874841213226318,
      "max_processing_time": 85.83355021476746,
      "avg_memory_usage_mb": 43.39306640625,
      "max_memory_usage_mb": 698.09765625
    },
    {
      "detector": "dlib",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        63.05294609069824,
        61.94845247268677,
        4.314084529876709,
        4.719027280807495,
        1.8183634281158447,
        65.40760707855225,
        59.78003692626953,
        3.401554822921753
      ],
      "memory_usage": [
        -924.45703125,
        149.5625,
        44.64453125,
        112.35546875,
        9.6640625,
        -105.67578125,
        224.296875,
        38.16015625
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 33.055259078741074,
      "std_processing_time": 29.537368272245587,
      "min_processing_time": 1.8183634281158447,
      "max_processing_time": 65.40760707855225,
      "avg_memory_usage_mb": -56.43115234375,
      "max_memory_usage_mb": 224.296875
    },
    {
      "detector": "dlib",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        61.855048179626465,
        72.07300329208374,
        4.134233236312866,
        3.8291146755218506,
        1.0760869979858398,
        70.76299619674683,
        64.40425419807434,
        2.308506727218628
      ],
      "memory_usage": [
        -278.0234375,
        251.6640625,
        55.31640625,
        104.1796875,
        -60.46484375,
        -346.6171875,
        287.08984375,
        155.140625
      ],
      "accuracy": 0.625,
      "precision": 0.6666666666666666,
      "recall": 0.8,
      "f1_score": 0.7272727272727272,
      "true_positives": 4,
      "true_negatives": 1,
      "false_positives": 2,
      "false_negatives": 1,
      "avg_processing_time": 35.05540543794632,
      "std_processing_time": 32.371020885262126,
      "min_processing_time": 1.0760869979858398,
      "max_processing_time": 72.07300329208374,
      "avg_memory_usage_mb": 21.03564453125,
      "max_memory_usage_mb": 287.08984375
    },
    {
      "detector": "mtcnn",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 2,
      "failed_pairs": 6,
      "errors": [
        "Error processing pair 1: Exception encountered when calling layer 'prelu1' (type PReLU).\n\n{{function_node __wrapped__Neg_device_/job:localhost/replica:0/task:0/device:CPU:0}} OOM when allocating tensor with shape[1,4798,7198,10] and type float on /job:localhost/replica:0/task:0/device:CPU:0 by allocator mklcpu [Op:Neg] name: \n\nCall arguments received by layer 'prelu1' (type PReLU):\n  \u2022 inputs=tf.Tensor(shape=(1, 4798, 7198, 10), dtype=float32)",
        "Error processing pair 2: OpenCV(4.11.0) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\core\\src\\alloc.cpp:73: error: (-4:Insufficient memory) Failed to allocate 72000000 bytes in function 'cv::OutOfMemoryError'\n",
        "Error processing pair 3: Unable to allocate 84.4 MiB for an array with shape (1, 1440, 2560, 3) and data type float64",
        "Error processing pair 4: Unable to allocate 84.4 MiB for an array with shape (1, 1440, 2560, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        true,
        false
      ],
      "ground_truth": [
        true,
        false
      ],
      "processing_times": [
        4.15956449508667,
        2.6092031002044678
      ],
      "memory_usage": [
        155.9921875,
        451.55859375
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 1,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 3.384383797645569,
      "std_processing_time": 0.7751806974411011,
      "min_processing_time": 2.6092031002044678,
      "max_processing_time": 4.15956449508667,
      "avg_memory_usage_mb": 303.775390625,
      "max_memory_usage_mb": 451.55859375
    },
    {
      "detector": "mtcnn",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        false,
        true,
        true,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        5.334773302078247,
        3.65733003616333,
        1.1260261535644531,
        2.4021410942077637
      ],
      "memory_usage": [
        -6.875,
        14.62109375,
        7.765625,
        9.6953125
      ],
      "accuracy": 0.75,
      "precision": 1.0,
      "recall": 0.6666666666666666,
      "f1_score": 0.8,
      "true_positives": 2,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 1,
      "avg_processing_time": 3.1300676465034485,
      "std_processing_time": 1.5560199248589004,
      "min_processing_time": 1.1260261535644531,
      "max_processing_time": 5.334773302078247,
      "avg_memory_usage_mb": 6.3017578125,
      "max_memory_usage_mb": 14.62109375
    },
    {
      "detector": "mtcnn",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        false,
        false,
        true,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        4.483001232147217,
        3.568760871887207,
        1.2065227031707764,
        2.641653299331665
      ],
      "memory_usage": [
        134.91015625,
        63.96484375,
        102.84765625,
        22.7421875
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.3333333333333333,
      "f1_score": 0.5,
      "true_positives": 1,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 2.9749845266342163,
      "std_processing_time": 1.2109140824632174,
      "min_processing_time": 1.2065227031707764,
      "max_processing_time": 4.483001232147217,
      "avg_memory_usage_mb": 81.1162109375,
      "max_memory_usage_mb": 134.91015625
    },
    {
      "detector": "mtcnn",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        false,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        3.5470852851867676,
        3.167564630508423,
        0.8252670764923096,
        1.950486421585083
      ],
      "memory_usage": [
        215.5234375,
        117.69140625,
        9.88671875,
        8.53515625
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.3333333333333333,
      "f1_score": 0.5,
      "true_positives": 1,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 2.3726008534431458,
      "std_processing_time": 1.0704909502337963,
      "min_processing_time": 0.8252670764923096,
      "max_processing_time": 3.5470852851867676,
      "avg_memory_usage_mb": 87.9091796875,
      "max_memory_usage_mb": 215.5234375
    },
    {
      "detector": "mtcnn",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mtcnn",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        2.9456863403320312,
        2.8565115928649902,
        0.726294755935669,
        1.747887372970581
      ],
      "memory_usage": [
        14.8359375,
        66.95703125,
        -11.59765625,
        3.8984375
      ],
      "accuracy": 0.25,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 2.069095015525818,
      "std_processing_time": 0.9075687444741187,
      "min_processing_time": 0.726294755935669,
      "max_processing_time": 2.9456863403320312,
      "avg_memory_usage_mb": 18.5234375,
      "max_memory_usage_mb": 66.95703125
    },
    {
      "detector": "mtcnn",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        true,
        true,
        true,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        4.246790647506714,
        3.4064691066741943,
        1.007826566696167,
        2.238417148590088
      ],
      "memory_usage": [
        153.97265625,
        -11.9921875,
        4.58203125,
        33.78515625
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 3,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 2.7248758673667908,
      "std_processing_time": 1.2212385442538713,
      "min_processing_time": 1.007826566696167,
      "max_processing_time": 4.246790647506714,
      "avg_memory_usage_mb": 45.0869140625,
      "max_memory_usage_mb": 153.97265625
    },
    {
      "detector": "mtcnn",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        true,
        true,
        true,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        5.66984748840332,
        4.8005523681640625,
        1.609523057937622,
        3.236039876937866
      ],
      "memory_usage": [
        110.265625,
        86.875,
        8.51171875,
        148.6640625
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 3,
      "true_negatives": 1,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 3.8289906978607178,
      "std_processing_time": 1.5500252484385793,
      "min_processing_time": 1.609523057937622,
      "max_processing_time": 5.66984748840332,
      "avg_memory_usage_mb": 88.5791015625,
      "max_memory_usage_mb": 148.6640625
    },
    {
      "detector": "mtcnn",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 4,
      "failed_pairs": 4,
      "errors": [
        "Error processing pair 1: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 2: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 6: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64",
        "Error processing pair 7: Unable to allocate 2.15 GiB for an array with shape (1, 8000, 12000, 3) and data type float64"
      ],
      "predictions": [
        true,
        true,
        true,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        false
      ],
      "processing_times": [
        3.1880722045898438,
        2.766242504119873,
        0.8169901371002197,
        1.800912857055664
      ],
      "memory_usage": [
        160.5234375,
        21.59375,
        32.265625,
        4.328125
      ],
      "accuracy": 0.75,
      "precision": 0.75,
      "recall": 1.0,
      "f1_score": 0.8571428571428571,
      "true_positives": 3,
      "true_negatives": 0,
      "false_positives": 1,
      "false_negatives": 0,
      "avg_processing_time": 2.1430544257164,
      "std_processing_time": 0.915960273398165,
      "min_processing_time": 0.8169901371002197,
      "max_processing_time": 3.1880722045898438,
      "avg_memory_usage_mb": 54.677734375,
      "max_memory_usage_mb": 160.5234375
    },
    {
      "detector": "retinaface",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        48.52935814857483,
        27.298068523406982,
        16.99042057991028,
        16.64178490638733,
        9.627888917922974,
        27.023056983947754,
        24.17305588722229,
        13.43852710723877
      ],
      "memory_usage": [
        -268.875,
        39.17578125,
        138.53515625,
        184.50390625,
        165.55078125,
        -372.71484375,
        354.23046875,
        -319.19140625
      ],
      "accuracy": 0.75,
      "precision": 0.8,
      "recall": 0.8,
      "f1_score": 0.8000000000000002,
      "true_positives": 4,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "avg_processing_time": 22.9652701318264,
      "std_processing_time": 11.371840118601199,
      "min_processing_time": 9.627888917922974,
      "max_processing_time": 48.52935814857483,
      "avg_memory_usage_mb": -9.84814453125,
      "max_memory_usage_mb": 354.23046875
    },
    {
      "detector": "retinaface",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.75783944129944,
        27.311987161636353,
        16.80882740020752,
        16.515162706375122,
        9.323208808898926,
        26.29022240638733,
        23.373140811920166,
        13.396203756332397
      ],
      "memory_usage": [
        -520.65234375,
        -22.94140625,
        313.921875,
        135.296875,
        50.33203125,
        -221.81640625,
        12.6328125,
        300.57421875
      ],
      "accuracy": 0.75,
      "precision": 0.8,
      "recall": 0.8,
      "f1_score": 0.8000000000000002,
      "true_positives": 4,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "avg_processing_time": 19.972074061632156,
      "std_processing_time": 6.4226547923333746,
      "min_processing_time": 9.323208808898926,
      "max_processing_time": 27.311987161636353,
      "avg_memory_usage_mb": 5.91845703125,
      "max_memory_usage_mb": 313.921875
    },
    {
      "detector": "retinaface",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.357951402664185,
        28.042850017547607,
        17.000101566314697,
        16.362836599349976,
        9.36813473701477,
        27.971738815307617,
        22.927912712097168,
        13.0429105758667
      ],
      "memory_usage": [
        -184.5,
        188.0078125,
        236.45703125,
        -9.1796875,
        47.078125,
        -951.5859375,
        21.65625,
        296.98046875
      ],
      "accuracy": 0.75,
      "precision": 1.0,
      "recall": 0.6,
      "f1_score": 0.7499999999999999,
      "true_positives": 3,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 2,
      "avg_processing_time": 20.13430455327034,
      "std_processing_time": 6.715224994084609,
      "min_processing_time": 9.36813473701477,
      "max_processing_time": 28.042850017547607,
      "avg_memory_usage_mb": -44.3857421875,
      "max_memory_usage_mb": 296.98046875
    },
    {
      "detector": "retinaface",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        true,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.39918613433838,
        27.167301893234253,
        16.25102472305298,
        15.989285945892334,
        9.620064496994019,
        26.32378888130188,
        23.225746870040894,
        12.895426988601685
      ],
      "memory_usage": [
        -45.75390625,
        296.7578125,
        230.69921875,
        134.69921875,
        129.37890625,
        -556.28515625,
        -329.29296875,
        597.72265625
      ],
      "accuracy": 0.5,
      "precision": 1.0,
      "recall": 0.2,
      "f1_score": 0.33333333333333337,
      "true_positives": 1,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 4,
      "avg_processing_time": 19.733978241682053,
      "std_processing_time": 6.427558530073504,
      "min_processing_time": 9.620064496994019,
      "max_processing_time": 27.167301893234253,
      "avg_memory_usage_mb": 57.24072265625,
      "max_memory_usage_mb": 597.72265625
    },
    {
      "detector": "retinaface",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "retinaface",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.09324884414673,
        26.993085145950317,
        15.81764554977417,
        15.29724907875061,
        9.17480206489563,
        25.40551733970642,
        22.286051988601685,
        12.526308298110962
      ],
      "memory_usage": [
        -134.5859375,
        37.08203125,
        120.94921875,
        45.81640625,
        83.99609375,
        -774.7734375,
        -601.01953125,
        501.15234375
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 19.199238538742065,
      "std_processing_time": 6.40308279620727,
      "min_processing_time": 9.17480206489563,
      "max_processing_time": 26.993085145950317,
      "avg_memory_usage_mb": -90.1728515625,
      "max_memory_usage_mb": 501.15234375
    },
    {
      "detector": "retinaface",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        true,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.047881841659546,
        27.54541325569153,
        17.011453866958618,
        16.190202236175537,
        9.355013608932495,
        26.841508626937866,
        22.837200164794922,
        12.918943166732788
      ],
      "memory_usage": [
        62.9375,
        2.390625,
        375.28515625,
        82.16015625,
        57.72265625,
        -556.828125,
        135.29296875,
        114.5703125
      ],
      "accuracy": 0.875,
      "precision": 0.8333333333333334,
      "recall": 1.0,
      "f1_score": 0.9090909090909091,
      "true_positives": 5,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 0,
      "avg_processing_time": 19.843452095985413,
      "std_processing_time": 6.471795454121856,
      "min_processing_time": 9.355013608932495,
      "max_processing_time": 27.54541325569153,
      "avg_memory_usage_mb": 34.19140625,
      "max_memory_usage_mb": 375.28515625
    },
    {
      "detector": "retinaface",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        26.582493782043457,
        28.87616467475891,
        18.172847747802734,
        18.025431871414185,
        9.767497062683105,
        27.985341787338257,
        22.863632678985596,
        13.815680503845215
      ],
      "memory_usage": [
        -465.21484375,
        172.75,
        167.97265625,
        261.61328125,
        40.42578125,
        -534.3984375,
        -18.5390625,
        171.28515625
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 20.761136263608932,
      "std_processing_time": 6.515695479479286,
      "min_processing_time": 9.767497062683105,
      "max_processing_time": 28.87616467475891,
      "avg_memory_usage_mb": -25.51318359375,
      "max_memory_usage_mb": 261.61328125
    },
    {
      "detector": "retinaface",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        true
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        25.07362198829651,
        25.71986961364746,
        15.889730453491211,
        15.39876389503479,
        9.07726502418518,
        25.87447428703308,
        21.68794298171997,
        12.445436000823975
      ],
      "memory_usage": [
        -138.6796875,
        134.03515625,
        329.92578125,
        90.25,
        29.04296875,
        -630.16015625,
        -39.953125,
        245.0546875
      ],
      "accuracy": 0.75,
      "precision": 0.8,
      "recall": 0.8,
      "f1_score": 0.8000000000000002,
      "true_positives": 4,
      "true_negatives": 2,
      "false_positives": 1,
      "false_negatives": 1,
      "avg_processing_time": 18.895888030529022,
      "std_processing_time": 6.128905981238607,
      "min_processing_time": 9.07726502418518,
      "max_processing_time": 25.87447428703308,
      "avg_memory_usage_mb": 2.439453125,
      "max_memory_usage_mb": 329.92578125
    },
    {
      "detector": "mediapipe",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "mediapipe",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 2: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 3: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 4: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 5: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 6: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 7: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'",
        "Error processing pair 8: MediaPipe is an optional detector, ensure the library is installed. Please install using 'pip install mediapipe'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yolov8",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 2: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 3: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 4: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 5: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 6: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 7: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'",
        "Error processing pair 8: Yolo is an optional detector, ensure the library is installed. Please install using 'pip install ultralytics'"
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yunet",
      "model": "VGG-Face",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        10.24310302734375,
        7.57928729057312,
        0.4784352779388428,
        0.48139381408691406,
        0.47251319885253906,
        6.138339996337891,
        6.101230144500732,
        0.46155691146850586
      ],
      "memory_usage": [
        477.23046875,
        -193.72265625,
        -85.890625,
        -182.80078125,
        -267.203125,
        -226.56640625,
        112.109375,
        18.0703125
      ],
      "accuracy": 0.875,
      "precision": 1.0,
      "recall": 0.8,
      "f1_score": 0.888888888888889,
      "true_positives": 4,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 1,
      "avg_processing_time": 3.994482457637787,
      "std_processing_time": 3.7168670550386156,
      "min_processing_time": 0.46155691146850586,
      "max_processing_time": 10.24310302734375,
      "avg_memory_usage_mb": -43.5966796875,
      "max_memory_usage_mb": 477.23046875
    },
    {
      "detector": "yunet",
      "model": "Facenet",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.766737937927246,
        6.015116453170776,
        0.4349796772003174,
        0.43953466415405273,
        0.4388716220855713,
        6.042192697525024,
        5.950417757034302,
        0.4385261535644531
      ],
      "memory_usage": [
        272.23046875,
        -161.625,
        3.421875,
        2.1640625,
        5.375,
        -221.6484375,
        153.14453125,
        3.67578125
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 3.315797120332718,
      "std_processing_time": 2.8874114602441043,
      "min_processing_time": 0.4349796772003174,
      "max_processing_time": 6.766737937927246,
      "avg_memory_usage_mb": 7.09228515625,
      "max_memory_usage_mb": 272.23046875
    },
    {
      "detector": "yunet",
      "model": "Facenet512",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        false,
        false,
        false,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.420997142791748,
        5.88556981086731,
        0.44466495513916016,
        0.4181630611419678,
        0.4375722408294678,
        5.9726574420928955,
        5.9663426876068115,
        0.40637779235839844
      ],
      "memory_usage": [
        -43.05078125,
        -166.9921875,
        27.62890625,
        0.82421875,
        15.26953125,
        19.203125,
        -33.8046875,
        0.04296875
      ],
      "accuracy": 0.625,
      "precision": 1.0,
      "recall": 0.4,
      "f1_score": 0.5714285714285715,
      "true_positives": 2,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 3,
      "avg_processing_time": 3.24404314160347,
      "std_processing_time": 2.821296038620868,
      "min_processing_time": 0.40637779235839844,
      "max_processing_time": 6.420997142791748,
      "avg_memory_usage_mb": -22.60986328125,
      "max_memory_usage_mb": 27.62890625
    },
    {
      "detector": "yunet",
      "model": "OpenFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.031944036483765,
        5.709305047988892,
        0.20910263061523438,
        0.2139594554901123,
        0.19452476501464844,
        5.780105829238892,
        5.717692613601685,
        0.20496511459350586
      ],
      "memory_usage": [
        157.81640625,
        73.046875,
        0.0859375,
        0.52734375,
        5.85546875,
        -188.59765625,
        24.61328125,
        6.453125
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 3.0076999366283417,
      "std_processing_time": 2.803600967547702,
      "min_processing_time": 0.19452476501464844,
      "max_processing_time": 6.031944036483765,
      "avg_memory_usage_mb": 9.97509765625,
      "max_memory_usage_mb": 157.81640625
    },
    {
      "detector": "yunet",
      "model": "DeepFace",
      "total_pairs": 8,
      "successful_pairs": 0,
      "failed_pairs": 8,
      "errors": [
        "Error processing pair 1: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 2: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 3: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 4: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 5: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 6: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 7: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf.",
        "Error processing pair 8: DeepFace model requires LocallyConnected2D but it is no longer supported after tf 2.12 but you have 2.19. You need to downgrade your tf."
      ],
      "predictions": [],
      "ground_truth": [],
      "processing_times": [],
      "memory_usage": []
    },
    {
      "detector": "yunet",
      "model": "DeepID",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        false,
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        5.693981647491455,
        5.672687530517578,
        0.12001442909240723,
        0.09177947044372559,
        0.08699798583984375,
        5.775825023651123,
        5.620418071746826,
        0.09033203125
      ],
      "memory_usage": [
        -241.15234375,
        280.69140625,
        24.21875,
        0.66015625,
        15.30078125,
        69.24609375,
        -87.76953125,
        -15.9453125
      ],
      "accuracy": 0.375,
      "precision": 0,
      "recall": 0.0,
      "f1_score": 0,
      "true_positives": 0,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 5,
      "avg_processing_time": 2.89400452375412,
      "std_processing_time": 2.7970190117702254,
      "min_processing_time": 0.08699798583984375,
      "max_processing_time": 5.775825023651123,
      "avg_memory_usage_mb": 5.65625,
      "max_memory_usage_mb": 280.69140625
    },
    {
      "detector": "yunet",
      "model": "ArcFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.601162910461426,
        6.172280550003052,
        0.35605454444885254,
        0.381974458694458,
        0.3627638816833496,
        5.9621500968933105,
        5.963220596313477,
        0.34008312225341797
      ],
      "memory_usage": [
        249.5859375,
        -102.7890625,
        1.671875,
        0.0,
        16.2265625,
        -39.3203125,
        -137.7109375,
        13.125
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 3.267461270093918,
      "std_processing_time": 2.9130984555470065,
      "min_processing_time": 0.34008312225341797,
      "max_processing_time": 6.601162910461426,
      "avg_memory_usage_mb": 0.0986328125,
      "max_memory_usage_mb": 249.5859375
    },
    {
      "detector": "yunet",
      "model": "Dlib",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.590036392211914,
        6.5529444217681885,
        0.8498961925506592,
        0.8428678512573242,
        0.8522469997406006,
        6.571039199829102,
        6.884689092636108,
        0.8564019203186035
      ],
      "memory_usage": [
        40.38671875,
        82.59375,
        -38.46875,
        26.9375,
        77.8203125,
        31.4453125,
        -21.90234375,
        140.546875
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 3.7500152587890625,
      "std_processing_time": 2.9012657525357493,
      "min_processing_time": 0.8428678512573242,
      "max_processing_time": 6.884689092636108,
      "avg_memory_usage_mb": 42.419921875,
      "max_memory_usage_mb": 140.546875
    },
    {
      "detector": "yunet",
      "model": "SFace",
      "total_pairs": 8,
      "successful_pairs": 8,
      "failed_pairs": 0,
      "errors": [],
      "predictions": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "ground_truth": [
        true,
        true,
        true,
        true,
        true,
        false,
        false,
        false
      ],
      "processing_times": [
        6.160294771194458,
        6.343155384063721,
        0.13133859634399414,
        0.11640620231628418,
        0.12184643745422363,
        5.7518041133880615,
        5.724036455154419,
        0.1142575740814209
      ],
      "memory_usage": [
        81.16015625,
        -148.91796875,
        8.55078125,
        -1.80859375,
        15.14453125,
        -194.90625,
        19.5,
        11.3359375
      ],
      "accuracy": 1.0,
      "precision": 1.0,
      "recall": 1.0,
      "f1_score": 1.0,
      "true_positives": 5,
      "true_negatives": 3,
      "false_positives": 0,
      "false_negatives": 0,
      "avg_processing_time": 3.0578924417495728,
      "std_processing_time": 2.9429098671428973,
      "min_processing_time": 0.1142575740814209,
      "max_processing_time": 6.343155384063721,
      "avg_memory_usage_mb": -26.24267578125,
      "max_memory_usage_mb": 81.16015625
    }
  ],
  "errors": []
}